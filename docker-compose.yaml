version: '3.8'

networks:
  architecturesamplenetwork:       

volumes:
  RedisData:
    driver: local

services:
  SqlServerInstance:
    container_name: SqlServerContainer
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - 8002:1433
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Hoorbakht@321

  WebApi:
    container_name: architecturesample-api
    image: architecturesample:dev
    ports:
      - "8080:8080"
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - SqlServerInstance
      - Redis
    restart: on-failure

  BlazorClient:
    container_name: architecturesample-blazor-client
    image: architecturesample/blazor/client:dev
    ports:
      - "9191:80"
    build:
      context: .
      dockerfile: Dockerfile-Blazor-Client
    depends_on:
      - WebApi 
  
  BlazorServer:
    container_name: architecturesample-blazor-server
    image: architecturesample/blazor/server:dev
    ports:
      - "9091:8080"
    build:
      context: .
      dockerfile: Dockerfile-Blazor-Server
    depends_on:
      - BlazorClient 
  
  Redis:
    image: redis:latest
    restart: always
    ports:
      - '3232:6379'
    volumes: 
      - RedisData:/data

  Prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - '2390:9090'
    volumes:
      - "./MonitoringFiles/prometheus.yml:/etc/prometheus/prometheus.yml"
    networks:
      - architecturesamplenetwork
    depends_on:
      - WebApi
    restart: on-failure
  
  NodeExporter:
    image: prom/node-exporter
    networks:
      - architecturesamplenetwork
    ports:
      - 9100:9100
  
  Grafana:
    image: 'grafana/grafana:latest'
    container_name: grafana
    ports:
      - '3000:3000'
    depends_on:
      - Prometheus
    volumes:
      - ./MonitoringFiles/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin@321
    networks:
      - architecturesamplenetwork
    restart: on-failure